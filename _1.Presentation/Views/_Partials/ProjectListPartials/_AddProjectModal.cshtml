@model _1.PresentationLayer.ViewModels.ProjectsViewModels.CreateProjectViewModel

<!-- ADD PROJECT MODAL -->
<div class="modal-overlay" id="modalOverlay">
    <div class="modal" id="projectModal">
        <header class="form-header">
            <h1 class="form-title">Add Project</h1>
            <div class="close-icon-wrapper">
                <button type="button" class="close-icon" aria-label="Close modal">
                    <i class="ti ti-x"></i>
                </button>

            </div>
        </header>

        <form asp-action="Create" asp-controller="Projects" method="post" enctype="multipart/form-data" class="project-form">
     
            <section class="image-upload-section" id="imageUploadSection">
                <label class="upload-border" for="projectImageInput">
                    <img src="https://cdn.builder.io/api/v1/image/assets/2a274513ffcd4318aca721aa009fe223/71061189ef2425aef008f44a16c4de13605797de?placeholderIfAbsent=true"
                         alt="Upload"
                         class="upload-icon"
                         id="uploadPreview" />
                    <span class="upload-text" id="uploadText">Click to upload icon</span>
                </label>
                <input type="file"
                       id="projectImageInput"
                       name="ImageFile"
                       accept="image/*"
                       hidden />

            </section>

            <div class="form-group">
                <label class="form-label">Project Name</label>
                <input type="text"
                       name="Name"
                       class="form-input"
                       placeholder="Project Name" />
                <div class="error-message" id="error-name"></div>
            </div>

            <div class="form-group">
                <label class="form-label">Customer Email</label>
                <div class="members-input">
                    <input type="text" id="clientInput" name="ClientEmail" class="member-input" placeholder="Customer Email" />
                    <ul id="clientSuggestionsList" class="suggestions-list"></ul>
            <div class="error-message" id="error-client"></div>
                </div>
            </div>

            <div class="form-group">
                <label class="form-label">Description</label>
                <div id="editor-container">
                    <p><br /></p>
                </div>
                <input type="hidden"
                       name="Description"
                       id="hidden-description" />
            </div>

            <div class="date-container">
                <div class="form-group">
                    <label class="form-label">Start Date</label>
                    <div class="date-wrapper">
                        <input type="date" name="StartDate" class="form-input custom-date" />
                        <img src="@Url.Content("~/Pictures/Icons/Calendar.svg")"
                             alt="Calendar"
                             class="calendar-icon-clickable" />
                    </div>
            <div class="error-message" id="error-startdate"></div>
                </div>

                <div class="form-group">
                    <label class="form-label">End Date</label>
                    <div class="date-wrapper">
                        <input type="date" name="EndDate" class="form-input custom-date" />
                        <img src="@Url.Content("~/Pictures/Icons/Calendar.svg")"
                             alt="Calendar"
                             class="calendar-icon-clickable" />
                    </div>
            <div class="error-message" id="error-enddate"></div>
                </div>
            </div>

            <div class="form-group">
                <label class="form-label">Members</label>
                <div class="members-input">
                    <div class="members-tags" id="membersTagsContainer">
                        <!-- Dynamiskt tillagda taggar kommer här -->
                    </div>
                    <input type="text"
                           id="memberInput"
                           class="member-input"
                           placeholder="Add member..." />
                    <ul id="suggestionsList" class="suggestions-list">
                        <!-- Filtrerade resultat kommer här -->
                    </ul>
            <div class="error-message" id="error-members"></div>
                </div>
            </div>

            <!-- Här kommer de dynamiskt genererade hidden inputsen för medlemmar -->
            <div id="memberHiddenFieldsContainer"></div>

            <div class="form-group">
                <label class="form-label">Budget</label>
                <div class="budget-input">
                    <img src="https://cdn.builder.io/api/v1/image/assets/2a274513ffcd4318aca721aa009fe223/4dcedbc0cf0e776a433556885c24281aa83f0ee1?placeholderIfAbsent=true"
                         alt="Currency"
                         class="currency-icon" />
                    <input type="text" name="Budget" placeholder="0" class="budget-field" />
                </div>
        <div class="error-message" id="error-budget"></div>
            </div>

            <button type="submit" class="submit-button">Create</button>
        </form>
 

    </div>
</div>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const form = document.querySelector(".project-form");

        form.addEventListener("submit", function (e) {
            let isValid = true;

            // Rensa gamla fel
            document.querySelectorAll(".error-message").forEach(el => el.textContent = "");

            const name = form.querySelector("input[name='Name']");
            const client = form.querySelector("input[name='ClientEmail']");
            const start = form.querySelector("input[name='StartDate']");
            const end = form.querySelector("input[name='EndDate']");
            const budget = form.querySelector("input[name='Budget']");
            const memberHiddenFields = document.querySelectorAll("input[name='Members']");

            // Project Name
            if (!name.value.trim()) {
                document.getElementById("error-name").textContent = "Project name is required.";
                isValid = false;
            }

            // Client Email must match suggestion
            const clientSuggestions = Array.from(document.querySelectorAll("#clientSuggestionsList li"));
            const match = clientSuggestions.some(s => s.textContent.trim().toLowerCase() === client.value.trim().toLowerCase());
            if (!match) {
                document.getElementById("error-client").textContent = "Select a valid customer from the list.";
                isValid = false;
            }

            // Dates
            const startDate = new Date(start.value);
            const endDate = new Date(end.value);
            if (!start.value) {
                document.getElementById("error-startdate").textContent = "Start date is required.";
                isValid = false;
            }
            if (!end.value) {
                document.getElementById("error-enddate").textContent = "End date is required.";
                isValid = false;
            }
            if (start.value && end.value && startDate > endDate) {
                document.getElementById("error-enddate").textContent = "End date must come after start date.";
                isValid = false;
            }

            // Members
            if (memberHiddenFields.length < 1) {
                document.getElementById("error-members").textContent = "Add at least one member from the list.";
                isValid = false;
            }

            // Budget
            const budgetValue = parseInt(budget.value.trim(), 10);
            if (isNaN(budgetValue) || budgetValue < 0 || budgetValue > Number.MAX_SAFE_INTEGER) {
                document.getElementById("error-budget").textContent = "Enter a valid number between 0 and " + Number.MAX_SAFE_INTEGER;
                isValid = false;
            }

            if (!isValid) e.preventDefault();
        });
    });
</script>
