@* ============================= *@
@*       Index.cshtml          *@
@* ============================= *@
@using System.Security.Claims
@using _1.PresentationLayer.ViewModels.MembersViewModels
@model UserListViewModel

@{
    ViewData["Title"] = "Managers page";
    Layout = "~/Views/Shared/_AppLayout.cshtml";
}

<section class="content-section">
    <div class="section-header">
        <!-- Lägg detta längst ned i <body> -->
        <div style="font-size:25px;color:Black;" hidden>
            ID: @User.FindFirstValue(ClaimTypes.NameIdentifier) |
            Namn: @User.Identity?.Name |
            Roll: @User.FindFirstValue(ClaimTypes.Role)
        </div>

        <h2 class="section-title">Managers</h2>
        @await Html.PartialAsync("~/Views/_Partials/UserListPartials/_SortByDropdown.cshtml",
                 new SortViewModel
        {
            SelectedSort = Model.SelectedSort,
            SelectedTab = Model.TabData.SelectedTab,

        })

    </div>

    @await Html.PartialAsync("~/Views/_Partials/UserListPartials/_UserTabList.cshtml", Model.TabData)



    @await Html.PartialAsync("~/Views/_Partials/UserListPartials/_UserCardGrid.cshtml", Model.Members)

    @await Html.PartialAsync("~/Views/_Partials/UserListPartials/_Pagination.cshtml", Model)

</section>

@await Html.PartialAsync("~/Views/_Partials/UserListPartials/_MemberModals.cshtml")

@section Scripts {
    <script>
        Console.WriteLine("🧠 RefreshClaims kallad av: " + User.Identity?.Name);
        Console.WriteLine("Gammal roll: " + User.FindFirstValue(ClaimTypes.Role));

        document.querySelectorAll(".menu-item-edit").forEach(button => {
            button.addEventListener("click", e => {
                const memberId = button.dataset.id;
                document.getElementById("editMemberId").value = memberId;
                document.getElementById("editMemberModalOverlay").classList.add("active");
            });
        });

        document.querySelectorAll(".menu-item-delete").forEach(button => {
            button.addEventListener("click", e => {
                const memberId = button.dataset.id;
                document.getElementById("deleteMemberId").value = memberId;
                document.getElementById("deleteMemberModalOverlay").classList.add("active");
            });
        });

        function closeEditMemberModal() {
            document.getElementById("editMemberModalOverlay").classList.remove("active");
        }

        function closeDeleteMemberModal() {
            document.getElementById("deleteMemberModalOverlay").classList.remove("active");
        }
    </script>
}
